@model System.Data.DataTable

@{
    ViewData["Title"] = @ViewBag.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<div class="jumbotron-fluid bg-light">
    <h2 class="text-left">@ViewData["Title"]</h2>
    <input type="hidden" id="HeaderTitle" value="@ViewData["Title"]" />
    <input type="hidden" id="StoreId" value="@ViewData["StoreId"]" />
</div>

<div tabindex="0" class="e-card" id="basic_card">
    <div class="e-card-header">
        <div class="e-card-header-caption">
            <div class="e-card-header-title">This serves as a dynamic UI that represents Storage Rack Map Plan for @ViewData["Title"].</div>

        </div>
    </div>

    <div class="e-card-content">
        <div class="control-section">
            <div class="control_wrapper">
                <ejs-kanban id="KanbanRack1" dataSource="((System.Data.DataTable)ViewBag.datasource)" externalDropId="KanbanRack1" keyField="RackToBay" allowDragAndDrop="true" enableTooltip="true" dragStop="onDragStop1" allowExternalDragAndDrop="true" created="onKanbanCreated" dialogOpen="onDialogOpen" dialogClose="onDialogClose">
                    <e-kanban-columns>
                        <e-kanban-column headerText="1st Bay" keyField="Rack 1 Bay 1" showItemCount="false" allowToggle="true" isExpanded="true" minCount="1" maxCount="20"></e-kanban-column>
                        <e-kanban-column headerText="2nd Bay" keyField="Rack 1 Bay 2" showItemCount="false" allowToggle="true" isExpanded="true" minCount="1" maxCount="20"></e-kanban-column>
                        <e-kanban-column headerText="3rd Bay" keyField="Rack 1 Bay 3" showItemCount="false" allowToggle="true" isExpanded="true" minCount="1" maxCount="20"></e-kanban-column>
                        <e-kanban-column headerText="4th Bay" keyField="Rack 1 Bay 4" showItemCount="false" allowToggle="true" isExpanded="true" minCount="1" maxCount="20"></e-kanban-column>
                                                                                                                                                                       
                        <e-kanban-column headerText="1st Bay" keyField="Rack 2 Bay 1" showItemCount="false" allowToggle="true" isExpanded="true" minCount="1" maxCount="20"></e-kanban-column>
                        <e-kanban-column headerText="2nd Bay" keyField="Rack 2 Bay 2" showItemCount="false" allowToggle="true" isExpanded="true" minCount="1" maxCount="20"></e-kanban-column>
                        <e-kanban-column headerText="3rd Bay" keyField="Rack 2 Bay 3" showItemCount="false" allowToggle="true" isExpanded="true" minCount="1" maxCount="20"></e-kanban-column>
                        <e-kanban-column headerText="4th Bay" keyField="Rack 2 Bay 4" showItemCount="false" allowToggle="true" isExpanded="true" minCount="1" maxCount="20"></e-kanban-column>

                        <e-kanban-column headerText="ON-FLOOR Bay 1" keyField="ON-FLOOR Bay 1" showItemCount="false" allowToggle="false" isExpanded="true" minCount="1"></e-kanban-column>
                        </e-kanban-columns>
                        <e-kanban-cardsettings headerField="ReferenceCode" selectionType="Single" template="#cardTemplate" />
                        <e-kanban-swimlanesettings allowDragAndDrop="true" keyField="LevelNo" showEmptyRow="true" sortDirection="Ascending" template="#swimlaneTemplate" />
                        <e-kanban-sortsettings sortBy="Custom" field="LevelNo"></e-kanban-sortsettings>
                        <e-kanban-dialogsettings template="#dialogTemplate"  />
                        <e-kanban-stackedHeaders>

                        <e-kanban-stackedHeader text="Rack 1" keyFields="Rack 1 Bay 1, Rack 1 Bay 2, Rack 1 Bay 3, Rack 1 Bay 4, Rack 1 Bay 5"></e-kanban-stackedHeader>
                        <e-kanban-stackedHeader text="Rack 2" keyFields="Rack 2 Bay 1, Rack 2 Bay 2, Rack 2 Bay 3, Rack 2 Bay 4, Rack 2 Bay 5"></e-kanban-stackedHeader>
                        <e-kanban-stackedHeader text="ON-FLOOR" keyFields="ON-FLOOR Bay 1"></e-kanban-stackedHeader>

                        </e-kanban-stackedHeaders>
                </ejs-kanban>
            </div>


        </div>
    </div>
</div>


<script type="text/javascript" src="//code.jquery.com/jquery-1.10.2.min.js"></script>
<script id="swimlaneTemplate" type="text/x-jsrender">
    <div class='swimlane-template e-swimlane-template-table'>
        <div class="e-swimlane-row-text"><span>Level: ${textField}</span></div>
    </div>
</script>

<script type="text/javascript">
    (function () {

        $("#KanbanRack1").ejKanban({
            allowExternalDragAndDrop: true
        });

    });

    document.addEventListener('DOMContentLoaded', function () {
        var mainstorage = $('#StoreId').val();
        var CBObj = document.getElementById("KanbanRack1").ej2_instances[0];
        if (mainstorage >= 4) {
            //console.log(mainstorage);
            var kanbanObj = new ej.kanban.Kanban({
                dataSource: CBObj.dataSource,
                keyField: 'RackToBay',
                dragStop: onDragStop1,
                created: onKanbanCreated,
                dialogOpen: onDialogOpen,
                dialogClose: onDialogClose,
                columns: [
                    { headerText: '1st Bay', keyField: 'Rack 1 Bay 1', showItemCount: false, allowToggle:false, isExpanded:true, minCount: 1, maxCount: 20 },
                    { headerText: '2nd Bay', keyField: 'Rack 1 Bay 2', showItemCount: false, allowToggle:false, isExpanded:true, minCount: 1, maxCount: 20 },
                    { headerText: '3rd Bay', keyField: 'Rack 1 Bay 3', showItemCount: false, allowToggle:false, isExpanded:true, minCount: 1, maxCount: 20 },
                    { headerText: '4th Bay', keyField: 'Rack 1 Bay 4', showItemCount: false, allowToggle:false, isExpanded:true, minCount: 1, maxCount: 20 },
                    { headerText: '5th Bay', keyField: 'Rack 1 Bay 5', showItemCount: false, allowToggle:false, isExpanded:true, minCount: 1, maxCount: 20 },
                    { headerText: '1st Bay', keyField: 'Rack 2 Bay 1', showItemCount: false, allowToggle:false, isExpanded:true, minCount: 1, maxCount: 20 },
                    { headerText: '2nd Bay', keyField: 'Rack 2 Bay 2', showItemCount: false, allowToggle:false, isExpanded:true, minCount: 1, maxCount: 20 },
                    { headerText: '3rd Bay', keyField: 'Rack 2 Bay 3', showItemCount: false, allowToggle:false, isExpanded:true, minCount: 1, maxCount: 20 },
                    { headerText: '4th Bay', keyField: 'Rack 2 Bay 4', showItemCount: false, allowToggle:false, isExpanded:true, minCount: 1, maxCount: 20 },
                    { headerText: '5th Bay', keyField: 'Rack 2 Bay 5', showItemCount: false, allowToggle: false, isExpanded: true, minCount: 1, maxCount: 20 },
                    { headerText: 'ON-FLOOR Bay 1', keyField: 'ON-FLOOR Bay 1', showItemCount: false, allowToggle: false, isExpanded: true, minCount: 1}
                ],
                stackedHeaders: [
                    { text: 'Rack 1', keyFields: 'Rack 1 Bay 1, Rack 1 Bay 2, Rack 1 Bay 3, Rack 1 Bay 4, Rack 1 Bay 5' },
                    { text: 'Rack 2', keyFields: 'Rack 2 Bay 1, Rack 2 Bay 2, Rack 2 Bay 3, Rack 2 Bay 4, Rack 2 Bay 5' },
                    { text: 'ON-FLOOR', keyFields:'ON-FLOOR Bay 1'}
                ],
                cardSettings: {
                    headerField: 'ReferenceCode',
                    selectionType: 'Single',
                    template: '#cardTemplate'
                },
                swimlaneSettings: {
                    keyField: 'LevelNo',
                    allowDragAndDrop: true,
                    template:'#swimlaneTemplate'
                },
                dialogSettings: {
                    template: '#dialogTemplate'
                }
            });

            kanbanObj.appendTo('#KanbanRack1');
        }
    });
    
</script>


<script id='dialogTemplate' type='text/x-template'>
    <table>
        <tbody>
            <tr>

                <td class="hidden">
                    <input id="ReferenceCode" name="ReferenceCode" type="hidden" class="e-field" value="${ReferenceCode}" required />
                    <input id="RackToBay" name="RackToBay" type="hidden" class="e-field" value="${RackToBay}"  />
                    <input id="RRCode" name="RRCode" type="hidden" class="e-field" value="${RRCode}"  />
                    <input id="CustomerID" name="CustomerID" type="hidden" class="e-field" value="${CustomerID}"  />
                    <input id="CustomerName" name="CustomerName" type="hidden" class="e-field" value="${CustomerName}"  />
                    <input id="Nature" name="Nature" type="hidden" class="e-field" value="${Nature}"  />
                    <input id="PayTypeInitial" name="PayTypeInitial" type="hidden" class="e-field" value="${PayTypeInitial}"  />
                    <input id="StorageID" name="StorageID" type="hidden" class="e-field" value="${StorageID}"  />
                    <input id="StorageLocationID" name="StorageLocationID" type="hidden" class="e-field" value="${StorageLocationID}"  />
                    <input id="StorageTypeID" name="StorageTypeID" type="hidden" class="e-field" value="${StorageTypeID}"  />
                    <input id="StorageName" name="StorageName" type="hidden" class="e-field" value="${StorageName}"  />
                    <input id="StorageLocationName" name="StorageLocationName" type="hidden" class="e-field" value="${StorageLocationName}"  />
                </td>
            </tr>
            <tr>
                <td class="e-label">Stock SKU</td>
                <td>
                    <input id="StockSKU" name="StockSKU" type="text" class="e-field" value="${StockSKU}" readonly="true" required />

                </td>
            </tr>
            <tr>
                <td class="e-label">Stock Description</td>
                <td>
                    <input id="StockDescription" name="StockDescription" type="text" class="e-field" value="${StockDescription}" readonly="true" required />

                </td>
            </tr>
            <tr>
                <td class="e-label">Customer</td>
                <td>
                    <input id="CustomerName" name="CustomerName" type="text" class="e-field" value="${CustomerName}" readonly="true" required />

                </td>
            </tr>
            <tr>
                <td class="e-label">Level No</td>
                <td>
                    <input id="LevelNo" name="LevelNo" type="text" class="e-field" value="${LevelNo}" required />
                </td>
            </tr>
            <tr>
                <td class="e-label">Remarks</td>
                <td>
                    <input id="Remarks" name="Remarks" type="text" class="e-field" value="${Remarks}" readonly="true" required />

                </td>
            </tr>
        </tbody>
    </table>
</script>

<script id="cardTemplate" type="text/x-template">
        <div class='card-template'>
            <div class='card-template-wrap'>
                <table class='card-template-wrap'>
                    <colgroup>
                        <col style="width:400px">
                        <col>
                    </colgroup>
                    <tbody>
                        <tr>
                            <td class='e-title'>
                                <div class='e-card-header'>
                                    <div class='e-card-header-caption'>
                                        <div class='e-card-header-title e-tooltip-text'>${CustomerName}</div>
                                    </div>
                                </div>

                            </td>
                        </tr>
                        <tr>
                            <td class='e-title'>

                                <div class='e-card-header'>
                                    <div class='e-card-header-caption' >
                                        <div class='e-card-header-title e-tooltip-text' style="font-weight:bold; font-size:16px">${StockSKU}</div>
                                    </div>
                                </div>

                            </td>
                        </tr>
                        <tr>
                            <td class='e-title'>

                                <div class='e-card-header'>
                                    <div class='e-card-header-caption' >
                                        <div class='e-card-header-title e-tooltip-text' style="font-weight:bold; font-size:16px">${StockDescription}</div>
                                    </div>
                                </div>

                            </td>
                        </tr>
                        <tr><td>
                            <div class="e-card-content" style="line-height:2.75em">
                                <table class='card-template-wrap'>
                                      <tbody>

                                        </tr>
                                        <tr class='e-tooltip-text'>
                                            <td colspan="2"><div class='e-description'>${Qty} pcs- ${ActualWeight} ${UOM}</div></td>

                                        </tr>
                                        <tr class="e-tooltip-text">
                                            <td><div class='e-size e-tooltip-text'>${Remarks}</div></td>
                                        </tr>
                                      </tbody>
                                </table>
                                </td></tr>
                            </div>
                </tbody>
            </table>
        </div>
    </div>
</script>

<script>
    var kanbanObj;
    
    var levelnoData = ['1', '2', '3', '4', '5'];

    function onKanbanCreated() {
        kanbanObj = this;
    }

    function onDialogOpen(args) {
        if (args.requestType !== 'Delete') {
            
            var curData = args.data;
            var LevelNoDropObj = new ej.dropdowns.DropDownList({
                value: curData.LevelNo, popupHeight: '300px',
                dataSource: levelnoData, fields: { text: 'LevelNo', value: 'LevelNo' }, placeholder: 'LevelNo'
            });
            LevelNoDropObj.appendTo(args.element.querySelector('#LevelNo'));
            //args.cancel = true;
            
        }
        
    }

    function onDialogClose(args) {
        //console.log(args.requestType);
        if (args.requestType == 'Edit') {
            //var kanbanObjA = document.querySelector("#KanbanRack1").ej2_instances[0];
            var curData = args.data;
            //console.log(curData);
            //kanbanObjA.updateCard(args.data, args.dropIndex);
            
            onDialogSave(curData);
        }
    }

 

</script>


<script type="text/javascript">

function onDragStop1(args) {

    if (args.event.target) {
            //console.log(args.data[0]);
            //if (args.data[0].count > 0) {

            //var boolsuccess = false;
            var message = '';
            /**/
            var mainstorage = $('#HeaderTitle').val();
    /**/

            var storagerec = {};
            storagerec.RackToBay = args.data[0].RackToBay;
            storagerec.StorageTimeFrameId = args.data[0].ReferenceCode;
            storagerec.LevelNo = parseInt(args.data[0].LevelNo);
            storagerec.RefCode = args.data[0].ReferenceCode;
            storagerec.ReferenceNo = args.data[0].RRCode;
            storagerec.CustomerId = args.data[0].CustomerID;
            storagerec.CustomerName = args.data[0].CustomerName;
            storagerec.Nature = args.data[0].Nature;
            storagerec.PayTypeInitial = args.data[0].PayTypeInitial;
            storagerec.StockId = args.data[0].StockID;
            storagerec.StorageLocationId = args.data[0].StorageLocationID;
            storagerec.StorageId = args.data[0].StorageID;
            storagerec.StockId = args.data[0].StockID;
            storagerec.StorageTypeId = args.data[0].StorageTypeID;
            storagerec.DateTimeFrameFrom = new Date();
            storagerec.DateTimeFrameTo = new Date();
            storagerec.Remarks = mainstorage;
            storagerec.StorageName = args.data[0].StorageName;
            storagerec.StorageLocationName = args.data[0].StorageLocationName;
            storagerec.FixedRate = 0;
            storagerec.HourlyRate = 0;

            console.log(JSON.stringify(storagerec));
            $.ajax({
                type: 'POST',
                url: '/Storaging/InsertRackToBay',
                data: JSON.stringify(storagerec),
                contentType: "application/json",
                dataType: 'json',
                success: function (data) {
                    //boolsuccess = true;
                    message = JSON.stringify(data);
                    console.log(data);
                }
            });
            storagerec = null;
            //}

            if (boolsuccess = true) {
                //alert(' Record/s Successfully Stored!');
            }
            }
    }

function onDialogSave(args) {
        var message = '';
        /**/
        var mainstorage = $('#HeaderTitle').val();
        /**/

        var storagerec = {};
        storagerec.RackToBay = args.RackToBay;
        storagerec.StorageTimeFrameId = args.ReferenceCode;
        storagerec.LevelNo = parseInt(args.LevelNo);
        storagerec.RefCode = args.ReferenceCode;
        storagerec.ReferenceNo = args.RRCode;
        storagerec.CustomerId = args.CustomerID;
        storagerec.CustomerName = args.CustomerName;
        storagerec.Nature = args.Nature;
        storagerec.PayTypeInitial = args.PayTypeInitial;
        storagerec.StockId = args.StockID;
        storagerec.StorageLocationId = args.StorageLocationID;
        storagerec.StorageId = args.StorageID;
        storagerec.StockId = args.StockID;
        storagerec.StorageTypeId = args.StorageTypeID;
        storagerec.DateTimeFrameFrom = new Date();
        storagerec.DateTimeFrameTo = new Date();
        storagerec.Remarks = mainstorage;
        storagerec.StorageName = args.StorageName;
        storagerec.StorageLocationName = args.StorageLocationName;
        storagerec.FixedRate = 0;
        storagerec.HourlyRate = 0;

        console.log(JSON.stringify(storagerec));
        $.ajax({
            type: 'POST',
            url: '/Storaging/InsertRackToBay',
            data: JSON.stringify(storagerec),
            contentType: "application/json",
            dataType: 'json',
            success: function (data) {
                //boolsuccess = true;
                message = JSON.stringify(data);
                console.log(data);
            }
        });
        storagerec = null;
        //}

        
}



</script>

<style type="text/css">
    .swimlane-template {
        font-size: 15px;
        font-weight: 500;
    }

        .swimlane-template img {
            height: 24px;
            width: 24px;
            border-radius: 50%;
        }

        .swimlane-template span {
            padding-left: 10px;
        }

    .e-kanban .e-prepare,
    .e-kanban .e-price {
        text-align: right;
    }

    .e-kanban .e-card table {
        table-layout: auto;
    }

    .e-kanban .e-time {
        display: inline-flex;
    }

    .e-kanban .e-size {
        color: #ff0000
    }

    .e-kanban .e-date {
        display: contents;
    }

    .e-kanban .e-kanban-date {
        padding-left: 4px;
    }

    .e-kanban .e-mins {
        padding-left: 3px;
    }

    .e-kanban .e-clock {
        padding-top: 2px;
    }

        .e-kanban .e-clock::before {
            content: '\e20c';
            color: #ffa500;
            font-size: 10px;
        }

    .e-kanban .e-done::before {
        content: '\ea84';
        color: #008000;
        font-size: 16px;
    }

    .fabric .e-kanban .e-clock::before {
        content: '\e97f';
    }

    .bootstrap .e-kanban .e-clock::before {
        content: '\e93e';
    }

    .bootstrap4 .e-kanban .e-clock::before {
        content: '\e7c7';
    }

    .bootstrap4 .e-kanban .e-done::before {
        content: '\e7d9';
    }

    .highcontrast .e-kanban .e-clock::before {
        content: '\e97f';
    }

    .e-kanban .card-template-wrap {
        color: #0026ff;
        line-height: normal;
        font-size: 12px;
        font-weight:500;
        width: 100%;
    }

        .e-kanban .card-template-wrap td {
            background: none !important;
            border: none !important;
            height: auto !important;
            line-height: 1.6;
        }

    .e-kanban .e-image img {
        background: #ececec;
        border-radius: 50%;
        width: 45px;
        height: 45px;
    }

    .e-kanban .e-image {
        padding-right: 5px;
        padding-left: 10px;
    }

    .e-kanban .card-header {
        font-size: 16px;
        font-weight: 500;
        display: inline-flex;
    }

    .e-kanban .e-card .card-content {
        display: flex;
        justify-content: space-between;
    }

    .e-kanban .e-description {
        font-size: 14px;
        padding-top: 5px;
        padding-bottom: 10px;
    }

    .e-kanban .e-card .e-done {
        padding-top: 5px;
        padding-bottom: 10px;
        position: absolute;
        right: 15px;
    }

    .e-kanban .e-readyText {
        color: #008000;
    }

    .e-kanban .e-preparingText {
        color: #9ACD32;
        animation: blinker 1.5s linear infinite;
    }

    .e-kanban-dialog .e-kanban-form-wrapper table .e-label, .e-kanban-dialog .e-kanban-form-container table .e-label {
        width: 80px;
    }

    .e-kanban .e-deliveredText {
        padding-top: 5px;
        color: #ff0000;
    }

    .e-kanban .e-card-custom-footer {
        display: flex;
        padding: 0px 12px 12px;
        line-height: 1;
        height: 35px;
    }

    .e-kanban .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.Low.e-selection:hover,
    .e-kanban .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.Low,
    .e-kanban.e-rtl .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.Low {
        border-left: 3px solid #ffd600;
    }

    .e-kanban .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.High.e-selection:hover,
    .e-kanban .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.High,
    .e-kanban.e-rtl .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.High {
        border-left: 3px solid #990099;
    }

    .e-kanban .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.Normal.e-selection:hover,
    .e-kanban .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.Normal,
    .e-kanban.e-rtl .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.Normal {
        border-left: 3px solid #66cc33;
    }

    .e-kanban .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.Critical.e-selection:hover,
    .e-kanban .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.Critical,
    .e-kanban.e-rtl .e-kanban-content .e-content-row .e-content-cells .e-card-wrapper .e-card.Critical {
        border-left: 3px solid #cc0000;
    }

    @@keyframes blinker {
        50% {
            opacity: 0.5;
        }
    }
</style>


