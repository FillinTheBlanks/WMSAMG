@model WMSAMG.Models.CSIS2017Models.TblReceivingDetail
@using Syncfusion.EJ2
@using Microsoft.AspNetCore.Identity
@using WMSAMG.Areas.Identity.Data

@inject SignInManager<WMSAMGUser> SignInManager
@inject UserManager<WMSAMGUser> UserManager
@{
    ViewData["Title"] = Model.ReferenceCode == Guid.Empty ? "New Blast In" : "Edit Blast In";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="jumbotron-fluid bg-light">
    <h2 class="text-left">@ViewData["Title"]</h2>
</div>
<p>@ViewBag.ErrorMsg</p>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddorEditBlastIn">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ReferenceCode" />
            <input type="hidden" asp-for="CarrierReferenceCode" />
            <input type="hidden" asp-for="StockGroupId" />
            <input type="hidden" asp-for="StockPcsperPack" />
            <input type="hidden" asp-for="StockPackperCase" />
            <input type="hidden" asp-for="StockWeightinKilosperPack" />
            <input type="hidden" asp-for="StockWeightinKilosperCase" />
            <input type="hidden" asp-for="TransactionDate" />
            <input type="hidden" asp-for="Nature" />
            <input type="hidden" asp-for="Source" />
            <input type="hidden" asp-for="IsSaved" />
            <input type="hidden" asp-for="PalletNo" />
            <div class="form-group">
                <ejs-textbox id="Rrcode" ejs-for="Rrcode" readonly="true" cssClass="e-outline form-control" placeholder="RR No." floatLabelType="Always"></ejs-textbox>
                <span asp-validation-for="Rrcode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <ejs-textbox id="CustomerId" ejs-for="CustomerId" readonly="true" cssClass="e-outline" placeholder="Account No." floatLabelType="Always"></ejs-textbox>
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <ejs-textbox id="CustomerName" ejs-for="CustomerName" readonly="true" cssClass="e-outline" placeholder="Account Name" floatLabelType="Always"></ejs-textbox>
                <span asp-validation-for="CustomerName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <ejs-textbox id="PayTypeInitial" ejs-for="PayTypeInitial" readonly="true" cssClass="e-outline" placeholder="Pay Type" floatLabelType="Always"></ejs-textbox>
                <span asp-validation-for="PayTypeInitial" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <label asp-for="StockId" class="control-label"></label>
                <input asp-for="StockId" class="form-control" readonly />
                <span asp-validation-for="StockId" class="text-danger"></span>
            </div>
            <div class="form-inline form-group">
                <ejs-textbox id="StockSku" ejs-for="StockSku" cssClass="e-outline" placeholder="SKU" floatLabelType="Auto" onkeypress="keypresshandle(event);" width="75%">  ||  <ejs-button id="StockSkuAccept" cssClass="e-info" content="Search" action="button" onclick="SearchSKU();"></ejs-button></ejs-textbox>

                <span asp-validation-for="StockSku" class="text-danger"></span>
            </div>
            <div class="form-group">
                <ejs-textbox id="StockDescription" ejs-for="StockDescription" readonly="true" cssClass="e-outline" placeholder="Description" floatLabelType="Always"></ejs-textbox>
                <span asp-validation-for="StockDescription" class="text-danger"></span>
            </div>
            <div class="form-inline form-group">
                <ejs-textbox id="Size" ejs-for="Size" cssClass="e-outline" placeholder="Size" floatLabelType="Always"></ejs-textbox>
                <span asp-validation-for="Size" class="text-danger"></span>
            </div>

            <div class="form-group">
                <ejs-numerictextbox id="Qty" ejs-for="Qty" cssClass="e-outline" placeholder="Quantity" min="1" floatLabelType="Always"></ejs-numerictextbox>
                <span asp-validation-for="Qty" class="text-danger"></span>
            </div>
            <div class="form-group">
                <ejs-numerictextbox id="ActualWeight" ejs-for="ActualWeight" cssClass="e-outline" min="1" placeholder="Actual Weight" floatLabelType="Auto"></ejs-numerictextbox>
                <span asp-validation-for="ActualWeight" class="text-danger"></span>
            </div>
            <div class="form-group">
                <ejs-textbox id="Uom" ejs-for="Uom" cssClass="e-outline" placeholder="UoM" floatLabelType="Always" readonly="true"></ejs-textbox>
                <span asp-validation-for="Uom" class="text-danger"></span>
            </div>
            <hr>
            <div class="form-group">
                <ejs-datetimepicker id="ReceivingTime" ejs-for="ReceivingTime" placeholder="Receiving date and time" cssClass="e-outline" floatLabelType="Always"></ejs-datetimepicker>
                <span asp-validation-for="ReceivingTime" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <ejs-datetimepicker id="EndTime" ejs-for="EndTime" placeholder="End date and time" cssClass="e-outline" floatLabelType="Always"></ejs-datetimepicker>
                <span asp-validation-for="EndTime" class="text-danger"></span>
            </div>

            <div class="form-group" hidden>
                <label asp-for="LocationId" class="control-label"></label>
                <input asp-for="LocationId" class="form-control" readonly />
                <span asp-validation-for="LocationId" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <label asp-for="LocationInitial" class="control-label"></label>
                <input asp-for="LocationInitial" class="form-control" readonly />
                <span asp-validation-for="LocationInitial" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <label asp-for="CompanyId" class="control-label"></label>
                <input asp-for="CompanyId" class="form-control" />
                <span asp-validation-for="CompanyId" class="text-danger"></span>
            </div>
            <div class="form-group" hidden>
                <label asp-for="CompanyName" class="control-label"></label>
                <input asp-for="CompanyName" class="form-control" />
                <span asp-validation-for="CompanyName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <ejs-textbox id="Remarks" ejs-for="Remarks" cssClass="e-outline" placeholder="Remarks" value=" " floatLabelType="Always"></ejs-textbox>
                <span asp-validation-for="Remarks" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="ApprovedBy" class="form-control" hidden />
                <span asp-validation-for="ApprovedBy" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="EmployeeId" class="form-control" hidden />
                <span asp-validation-for="EmployeeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <ejs-datetimepicker id="EmployeeDate" ejs-for="EmployeeDate" placeholder="Encoded date and time" cssClass="e-outline" readonly="true" enabled="false" floatLabelType="Always"></ejs-datetimepicker>
                <span asp-validation-for="EmployeeDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" id="Save" value="Submit" class="e-btn e-primary bg-success" /> |
                <a asp-action="BlastingIn" class="e-btn e-primary bg-info">Back to List</a>
            </div>
        </form>
    </div>
</div>

<div>
    
</div>

<ejs-grid id="Grid" allowPaging="true" allowFiltering="true" allowSorting="true" height="300" rowHeight="38" enableHover="false">
    <e-grid-aggregates>
        <e-grid-aggregate>
            <e-aggregate-columns>
                <e-aggregate-column field="Qty" type="Sum" format="N2" footerTemplate="${Sum}"></e-aggregate-column>
                <e-aggregate-column field="ActualWeight" type="Sum" format="N2" footerTemplate="${Sum}"></e-aggregate-column>
            </e-aggregate-columns>
        </e-grid-aggregate>
    </e-grid-aggregates>
    <e-grid-filtersettings type="Menu"></e-grid-filtersettings>
    <e-grid-columns>
        <e-grid-column field="ReferenceCode" headerText="Ref Code" type="string" textAlign="Right" width="120" visible="false"></e-grid-column>
        <e-grid-column field="Remarks" headerText="Remarks" type="string" width="120"></e-grid-column>
        <e-grid-column field="CustomerId" headerText="Customer ID" type="string" width="120"></e-grid-column>
        <e-grid-column field="CustomerName" headerText="Customer Name" type="string" width="180"></e-grid-column>
        <e-grid-column field="StockId" headerText="StockId" type="string" width="140" visible="false"></e-grid-column>
        <e-grid-column field="StockSku" headerText="Stock SKU" type="string" width="140"></e-grid-column>
        <e-grid-column field="StockPcsperPack" headerText="Size" type="string" width="100"></e-grid-column>
        <e-grid-column field="StockDescription" headerText="Description" type="string" width="180"></e-grid-column>
        <e-grid-column field="Qty" headerText="Qty" type="number" width="140"></e-grid-column>
        <e-grid-column field="ActualWeight" headerText="Actual Weight" textAlign="Right" type="number" format="N2" width="120"></e-grid-column>
        <e-grid-column field="ReceivingTime" headerText="Receiving Date" format='MM/dd/yyyy hh:mm a' textAlign="Left" width="180"></e-grid-column>
        <e-grid-column field="EndTime" headerText="End Date" format='MM/dd/yyyy hh:mm a' textAlign="Left" width="180"></e-grid-column>
        <e-grid-column field="LineNum" headerText="Line No." type="number" width="100"></e-grid-column>
    </e-grid-columns>
</ejs-grid>

<script type="text/javascript">

    document.addEventListener('DOMContentLoaded', function () {
        
        var grid = document.getElementById('Grid').ej2_instances[0]; // Grid instance
        var ajax = new ej.base.Ajax('/Receiving/GetRecordsbyRRNoBlastIn/' + $('#Rrcode').val(), 'GET');
        ajax.send();
        ajax.onSuccess = function (data) {
            grid.dataSource = JSON.parse(data);
            grid.hideSpinner();
        };
    }, false);

</script>

<script>
    function SearchSKU() {
        var str = $("#StockSku").val();

        if ($("#EmployeeDate").val() == '') {
            $("#ReceivingTime").val(getDateTime(0));
            $("#EndTime").val(getDateTime(1));
            $("#EmployeeDate").val(getDateTime(0));
            //$("#TransactionDate").val(getDateTime(0));
        }


        $('#StockDescription').ready(function () {
            var options = {};
            options.url = '/Stocks/GetStockBySKU/' + str;
            options.type = "GET";
            options.dataType = "json";
            options.success = function (data) {
                console.log(data);
                data.forEach(function (element) {

                    $('#StockDescription').val(element.StockDescription);
                    $('#StockId').val(element.StockId);
                    $('#StockSku').val(element.StockSku);
                    $('#StockGroupId').val(element.StockGroupId);
                    $('#CustomerId').val(element.CustomerId);
                    $('#CustomerName').val(element.CustomerName);
                    $('#CompanyId').val(element.CompanyId);
                    $('#CompanyName').val(element.CompanyName);
                    $('#PayTypeInitial').val(element.PayTypeInitial);
                    $('#LocationId').val(element.LocationId);
                    $('#LocationInitial').val(element.LocationInitial);
                    $('#StockPcsperPack').val(element.StockPcsperPack);
                    $('#StockPackperCase').val(element.StockPackperCase);
                    $('#StockWeightinKilosperCase').val(element.StockWeightinKilosperCase);
                    $('#StockWeightinKilosperPack').val(element.StockWeightinKilosperPack);
                    $('#Uom').val('Kls');
                    $('#PalletNo').val('');
                    
                    $('#Qty').val(parseInt(element.DefaultQty));
                    $('#isSaved').val(1);
                    $('#Size').val('1-1');
                    $('#Qty').focus();
                    //var now = new Date();
                    //var year = now.getFullYear();
                    //var month = now.getMonth() + 1;
                    //var day = now.getDate();

                    //if (month.toString().length == 1) {
                    //    month = '0' + month;
                    //}
                    //if (day.toString().length == 1) {
                    //    day = '0' + day;
                    //}

                    //var PDNo = 'PD-' + year.toString().substring(3) + month.toString() + day.toString();

                    //$('#Remarks').val('');
                });
            };
            
            options.error = function () {
                $("#msg").html("Error while calling the Web API!");
            };
            $.ajax(options);
        });

        var grid = document.getElementById('Grid').ej2_instances[0]; // Grid instance
        var ajax = new ej.base.Ajax('/Receiving/GetRecordsbyRRNo/' + $('#Rrcode').val(), 'GET');
        ajax.send();
        ajax.onSuccess = function (data) {
            grid.dataSource = JSON.parse(data);
            grid.hideSpinner();
        };
    }

    function keypresshandle(e) {
        if (e.keyCode === 13) {
            e.preventDefault();
            SearchSKU();

        }
    }

    function getPDNo(args) {
        if (args.value != '') {
        var now = args.value;
        //var now = new Date();
        var year = now.getFullYear();
        var month = now.getMonth() + 1;
        var day = now.getDate();

        if (month.toString().length == 1) {
            month = '0' + month;
        }
        if (day.toString().length == 1) {
            day = '0' + day;
        }

        var PDNo = 'PD-' + year.toString().substring(3) + month.toString() + day.toString();

        $('#Remarks').val(PDNo);
        }
        else {
            $('#Remarks').val('');
        }
    }

    //#region DateTime Formatter
    function getDateTime(addHour) {
        var now = new Date();
        var year = now.getFullYear();
        var month = now.getMonth() + 1;
        var day = now.getDate();
        var hour = now.getHours() + addHour;
        var minute = now.getMinutes();
        var second = now.getSeconds();
        if (month.toString().length == 1) {
            month = '0' + month;
        }
        if (day.toString().length == 1) {
            day = '0' + day;
        }
        if (hour.toString().length == 1) {
            hour = '0' + hour;
        }
        if (minute.toString().length == 1) {
            minute = '0' + minute;
        }
        if (second.toString().length == 1) {
            second = '0' + second;
        }
        //var dateTime = day + '/' + month + '/' + year + ' ' + hour + ':' + minute + ':' + second;
        var dateTime = year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second;
        return dateTime;
    }

    var dReady = false;
    var theme;
    var dtTime = false;
    var isDataBound = false;
    var isDataChanged = true;
    var intervalFun;
    var clrIntervalFun;
    var clrIntervalFun1;
    var clrIntervalFun2;
    var dropSlectedIndex = null;
    var stTime;
    stTime = performance.now();

    function startTimer(args) {
        clearTimeout(clrIntervalFun);
        clearInterval(intervalFun);
        dtTime = true;
    }
    function valueChange() {
        var grid = document.getElementById("Grid").ej2_instances[0];
        this.closePopup();
        grid.showSpinner();
        dropSlectedIndex = null;
        var index = this.value;
        clearTimeout(clrIntervalFun2);

        var grid = document.getElementById('Grid').ej2_instances[0]; // Grid instance
        var ajax = new ej.base.Ajax('/Receiving/GetRecordsbyRRNo/' + $('#Rrcode').val(), 'GET');
        ajax.send();

        clrIntervalFun2 = setTimeout(function () {
            isDataChanged = true;
            stTime = null;
            var contentElement = grid.contentModule.getPanel().firstChild;
            contentElement.scrollLeft = 0;
            contentElement.scrollTop = 0;
            grid.pageSettings.currentPage = 1;
            stTime = performance.now();
            ajax.onSuccess = function (data) {
                grid.dataSource = JSON.parse(data);
                grid.hideSpinner();
            };
        }, 100);
    }

    document.getElementById('Grid').addEventListener('DOMSubtreeModified', function () {
        if (dReady && stTime && isDataChanged) {
            var msgEle = document.getElementById('msg');
            var val = (performance.now() - stTime).toFixed(0);
            stTime = null;
            dtTime = false;
            dReady = false;
            isDataChanged = false;
            msgEle.innerHTML = 'Load Time: ' + "<b>" + val + "</b>" + '<b>ms</b>';
            msgEle.classList.remove('e-hide');
        }
    });
    //#endregion
</script>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
